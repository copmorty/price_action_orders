// Mocks generated by Mockito 5.0.15 from annotations
// in price_action_orders/test/domain/usecases/trade_post_order_uc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:price_action_orders/core/error/failures.dart' as _i5;
import 'package:price_action_orders/domain/entities/order_cancel_request.dart'
    as _i9;
import 'package:price_action_orders/domain/entities/order_cancel_response.dart'
    as _i8;
import 'package:price_action_orders/domain/entities/order_request.dart' as _i7;
import 'package:price_action_orders/domain/entities/order_response_full.dart'
    as _i6;
import 'package:price_action_orders/domain/repositories/trade_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [TradeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTradeRepository extends _i1.Mock implements _i3.TradeRepository {
  MockTradeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.ServerFailure, _i6.OrderResponseFull>> postOrder(
          _i7.OrderRequest? order) =>
      (super.noSuchMethod(Invocation.method(#postOrder, [order]),
          returnValue: Future<
                  _i2.Either<_i5.ServerFailure, _i6.OrderResponseFull>>.value(
              _FakeEither_0<_i5.ServerFailure, _i6.OrderResponseFull>())) as _i4
          .Future<_i2.Either<_i5.ServerFailure, _i6.OrderResponseFull>>);
  @override
  _i4.Future<_i2.Either<_i5.ServerFailure, _i8.CancelOrderResponse>>
      cancelOrder(_i9.CancelOrderRequest? cancelOrder) => (super.noSuchMethod(
          Invocation.method(#cancelOrder, [cancelOrder]),
          returnValue: Future<
                  _i2.Either<_i5.ServerFailure, _i8.CancelOrderResponse>>.value(
              _FakeEither_0<_i5.ServerFailure, _i8.CancelOrderResponse>())) as _i4
          .Future<_i2.Either<_i5.ServerFailure, _i8.CancelOrderResponse>>);
  @override
  String toString() => super.toString();
}
